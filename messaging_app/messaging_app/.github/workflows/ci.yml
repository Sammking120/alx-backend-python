name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-django pytest-html mysqlclient
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Set up Django settings
        run: |
          echo "DATABASES = {
              'default': {
                  'ENGINE': 'django.db.backends.mysql',
                  'NAME': 'test_db',
                  'USER': 'test_user',
                  'PASSWORD': 'test_password',
                  'HOST': '127.0.0.1',
                  'PORT': '3306',
              }
          }" > messaging_app/settings_test.py

      - name: Run tests
        env:
          DJANGO_SETTINGS_MODULE: messaging_app.settings_test
        run: pytest --junitxml=test-report.xml --html=report.html --self-contained-html

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            test-report.xml
            report.html